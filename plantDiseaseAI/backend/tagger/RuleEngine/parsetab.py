
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSTARPLUSQMleftORleftANDrightNOTinternal SLOT LSB RSB LAB RAB LB RB QM PLUS STAR ASSIGN RQ SEMICOLON DQ NAME SPANTYPE POW AT STR COMMA COLON NOT OR AND LBRACE RBRACE DOT TILDErules : rule\n             | rules rulerule : NAME ASSIGN expr\n            | internal NAME ASSIGN exprexpr : counted\n            | counted RQ actionSeq RQ\n            | counted SLOT NAMEactionSeq : action\n                 | actionSeq SEMICOLON actionaction : NAME ASSIGN STRcounted : term\n               | term QM\n               | term STAR\n               | term PLUSterm : matchExpr\n            | orderedExprs\n            | unorderedExprs\n            | mirroredExprs\n            | alteredExprs\n            | callExprorderedExprs : LB exprs RBunorderedExprs : TILDE LB exprs RBmirroredExprs : POW LB exprs RBalteredExprs : LSB exprs RSBcallExpr : AT NAMEexprs : expr\n             | exprs exprspan : SPANTYPE\n            | COLON spanAttr\n            | SPANTYPE COLON spanAttrspanAttr : NAME\n                | NAME ASSIGN STRexprDot : DOT\n               | LAB RABexprToken : STRexprSpan : LAB span RABexprOperation : NOT matchExpr\n                     | matchExpr AND matchExpr\n                     | matchExpr OR matchExprmatchExpr : exprDot\n                 | exprToken\n                 | exprSpan\n                 | exprOperation\n                 | LBRACE matchExpr RBRACE'
    
_lr_action_items = {'STAR':([8,9,10,11,12,15,18,19,20,22,24,26,28,40,45,48,52,53,54,57,62,63,68,71,],[-43,-17,-20,-15,-33,-18,-41,-40,42,-35,-19,-16,-42,-34,-25,-37,-38,-39,-21,-36,-24,-44,-23,-22,]),'RAB':([16,37,38,59,60,69,75,],[40,57,-28,-29,-31,-30,-32,]),'LAB':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,25,26,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[16,-43,-17,-20,-15,-33,16,-18,-41,-40,-11,-35,16,-19,16,-16,-42,16,-5,16,16,16,-26,16,16,-34,16,-13,-12,-14,-25,16,-37,-38,-39,-21,-27,16,-36,16,-24,-44,-7,-23,-22,-6,]),'DOT':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,25,26,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[12,-43,-17,-20,-15,-33,12,-18,-41,-40,-11,-35,12,-19,12,-16,-42,12,-5,12,12,12,-26,12,12,-34,12,-13,-12,-14,-25,12,-37,-38,-39,-21,-27,12,-36,12,-24,-44,-7,-23,-22,-6,]),'SLOT':([8,9,10,11,12,15,18,19,20,22,24,26,28,30,40,42,43,44,45,48,52,53,54,57,62,63,68,71,],[-43,-17,-20,-15,-33,-18,-41,-40,-11,-35,-19,-16,-42,49,-34,-13,-12,-14,-25,-37,-38,-39,-21,-36,-24,-44,-23,-22,]),'LSB':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,26,28,30,31,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[23,-43,-17,-20,-15,-33,23,-18,-41,-40,-11,-35,23,-19,-16,-42,-5,23,-26,23,23,-34,23,-13,-12,-14,-25,23,-37,-38,-39,-21,-27,23,-36,23,-24,-44,-7,-23,-22,-6,]),'RQ':([8,9,10,11,12,15,18,19,20,22,24,26,28,30,40,42,43,44,45,48,52,53,54,57,62,63,65,67,68,71,76,77,],[-43,-17,-20,-15,-33,-18,-41,-40,-11,-35,-19,-16,-42,50,-34,-13,-12,-14,-25,-37,-38,-39,-21,-36,-24,-44,73,-8,-23,-22,-9,-10,]),'SEMICOLON':([65,67,76,77,],[72,-8,-9,-10,]),'POW':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,26,28,30,31,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[14,-43,-17,-20,-15,-33,14,-18,-41,-40,-11,-35,14,-19,-16,-42,-5,14,-26,14,14,-34,14,-13,-12,-14,-25,14,-37,-38,-39,-21,-27,14,-36,14,-24,-44,-7,-23,-22,-6,]),'internal':([0,2,3,6,8,9,10,11,12,15,18,19,20,22,24,26,27,28,30,40,42,43,44,45,48,51,52,53,54,57,62,63,64,68,71,73,],[4,4,-1,-2,-43,-17,-20,-15,-33,-18,-41,-40,-11,-35,-19,-16,-3,-42,-5,-34,-13,-12,-14,-25,-37,-4,-38,-39,-21,-36,-24,-44,-7,-23,-22,-6,]),'PLUS':([8,9,10,11,12,15,18,19,20,22,24,26,28,40,45,48,52,53,54,57,62,63,68,71,],[-43,-17,-20,-15,-33,-18,-41,-40,44,-35,-19,-16,-42,-34,-25,-37,-38,-39,-21,-36,-24,-44,-23,-22,]),'RB':([8,9,10,11,12,15,18,19,20,22,24,26,28,30,34,35,40,42,43,44,45,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[-43,-17,-20,-15,-33,-18,-41,-40,-11,-35,-19,-16,-42,-5,-26,54,-34,-13,-12,-14,-25,-37,-38,-39,-21,-27,68,-36,71,-24,-44,-7,-23,-22,-6,]),'TILDE':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,26,28,30,31,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[17,-43,-17,-20,-15,-33,17,-18,-41,-40,-11,-35,17,-19,-16,-42,-5,17,-26,17,17,-34,17,-13,-12,-14,-25,17,-37,-38,-39,-21,-27,17,-36,17,-24,-44,-7,-23,-22,-6,]),'COLON':([16,38,],[39,58,]),'ASSIGN':([1,7,60,66,],[5,31,70,74,]),'$end':([2,3,6,8,9,10,11,12,15,18,19,20,22,24,26,27,28,30,40,42,43,44,45,48,51,52,53,54,57,62,63,64,68,71,73,],[0,-1,-2,-43,-17,-20,-15,-33,-18,-41,-40,-11,-35,-19,-16,-3,-42,-5,-34,-13,-12,-14,-25,-37,-4,-38,-39,-21,-36,-24,-44,-7,-23,-22,-6,]),'RBRACE':([8,12,18,19,22,28,40,47,48,52,53,57,63,],[-43,-33,-41,-40,-35,-42,-34,63,-37,-38,-39,-36,-44,]),'SPANTYPE':([16,],[38,]),'AT':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,26,28,30,31,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[21,-43,-17,-20,-15,-33,21,-18,-41,-40,-11,-35,21,-19,-16,-42,-5,21,-26,21,21,-34,21,-13,-12,-14,-25,21,-37,-38,-39,-21,-27,21,-36,21,-24,-44,-7,-23,-22,-6,]),'STR':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,25,26,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,70,71,73,74,],[22,-43,-17,-20,-15,-33,22,-18,-41,-40,-11,-35,22,-19,22,-16,-42,22,-5,22,22,22,-26,22,22,-34,22,-13,-12,-14,-25,22,-37,-38,-39,-21,-27,22,-36,22,-24,-44,-7,-23,75,-22,-6,77,]),'LB':([5,8,9,10,11,12,13,14,15,17,18,19,20,22,23,24,26,28,30,31,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[13,-43,-17,-20,-15,-33,13,36,-18,41,-41,-40,-11,-35,13,-19,-16,-42,-5,13,-26,13,13,-34,13,-13,-12,-14,-25,13,-37,-38,-39,-21,-27,13,-36,13,-24,-44,-7,-23,-22,-6,]),'AND':([8,11,12,18,19,22,28,40,47,48,52,53,57,63,],[-43,32,-33,-41,-40,-35,-42,-34,32,-37,-38,32,-36,-44,]),'LBRACE':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,25,26,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[25,-43,-17,-20,-15,-33,25,-18,-41,-40,-11,-35,25,-19,25,-16,-42,25,-5,25,25,25,-26,25,25,-34,25,-13,-12,-14,-25,25,-37,-38,-39,-21,-27,25,-36,25,-24,-44,-7,-23,-22,-6,]),'NAME':([0,2,3,4,6,8,9,10,11,12,15,18,19,20,21,22,24,26,27,28,30,39,40,42,43,44,45,48,49,50,51,52,53,54,57,58,62,63,64,68,71,72,73,],[1,1,-1,7,-2,-43,-17,-20,-15,-33,-18,-41,-40,-11,45,-35,-19,-16,-3,-42,-5,60,-34,-13,-12,-14,-25,-37,64,66,-4,-38,-39,-21,-36,60,-24,-44,-7,-23,-22,66,-6,]),'RSB':([8,9,10,11,12,15,18,19,20,22,24,26,28,30,34,40,42,43,44,45,46,48,52,53,54,55,57,62,63,64,68,71,73,],[-43,-17,-20,-15,-33,-18,-41,-40,-11,-35,-19,-16,-42,-5,-26,-34,-13,-12,-14,-25,62,-37,-38,-39,-21,-27,-36,-24,-44,-7,-23,-22,-6,]),'NOT':([5,8,9,10,11,12,13,15,18,19,20,22,23,24,25,26,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,48,52,53,54,55,56,57,61,62,63,64,68,71,73,],[29,-43,-17,-20,-15,-33,29,-18,-41,-40,-11,-35,29,-19,29,-16,-42,29,-5,29,29,29,-26,29,29,-34,29,-13,-12,-14,-25,29,-37,-38,-39,-21,-27,29,-36,29,-24,-44,-7,-23,-22,-6,]),'QM':([8,9,10,11,12,15,18,19,20,22,24,26,28,40,45,48,52,53,54,57,62,63,68,71,],[-43,-17,-20,-15,-33,-18,-41,-40,43,-35,-19,-16,-42,-34,-25,-37,-38,-39,-21,-36,-24,-44,-23,-22,]),'OR':([8,11,12,18,19,22,28,40,47,48,52,53,57,63,],[-43,33,-33,-41,-40,-35,-42,-34,33,-37,-38,-39,-36,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exprDot':([5,13,23,25,29,31,32,33,35,36,41,46,56,61,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'term':([5,13,23,31,35,36,41,46,56,61,],[20,20,20,20,20,20,20,20,20,20,]),'span':([16,],[37,]),'orderedExprs':([5,13,23,31,35,36,41,46,56,61,],[26,26,26,26,26,26,26,26,26,26,]),'unorderedExprs':([5,13,23,31,35,36,41,46,56,61,],[9,9,9,9,9,9,9,9,9,9,]),'exprOperation':([5,13,23,25,29,31,32,33,35,36,41,46,56,61,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'rules':([0,],[2,]),'expr':([5,13,23,31,35,36,41,46,56,61,],[27,34,34,51,55,34,34,55,55,55,]),'exprToken':([5,13,23,25,29,31,32,33,35,36,41,46,56,61,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'mirroredExprs':([5,13,23,31,35,36,41,46,56,61,],[15,15,15,15,15,15,15,15,15,15,]),'actionSeq':([50,],[65,]),'rule':([0,2,],[3,6,]),'matchExpr':([5,13,23,25,29,31,32,33,35,36,41,46,56,61,],[11,11,11,47,48,11,52,53,11,11,11,11,11,11,]),'exprs':([13,23,36,41,],[35,46,56,61,]),'callExpr':([5,13,23,31,35,36,41,46,56,61,],[10,10,10,10,10,10,10,10,10,10,]),'exprSpan':([5,13,23,25,29,31,32,33,35,36,41,46,56,61,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'action':([50,72,],[67,76,]),'spanAttr':([39,58,],[59,69,]),'counted':([5,13,23,31,35,36,41,46,56,61,],[30,30,30,30,30,30,30,30,30,30,]),'alteredExprs':([5,13,23,31,35,36,41,46,56,61,],[24,24,24,24,24,24,24,24,24,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> rules","S'",1,None,None,None),
  ('rules -> rule','rules',1,'p_rules','textRule.py',103),
  ('rules -> rules rule','rules',2,'p_rules','textRule.py',104),
  ('rule -> NAME ASSIGN expr','rule',3,'p_rule','textRule.py',111),
  ('rule -> internal NAME ASSIGN expr','rule',4,'p_rule','textRule.py',112),
  ('expr -> counted','expr',1,'p_expr','textRule.py',121),
  ('expr -> counted RQ actionSeq RQ','expr',4,'p_expr','textRule.py',122),
  ('expr -> counted SLOT NAME','expr',3,'p_expr','textRule.py',123),
  ('actionSeq -> action','actionSeq',1,'p_actionSeq','textRule.py',131),
  ('actionSeq -> actionSeq SEMICOLON action','actionSeq',3,'p_actionSeq','textRule.py',132),
  ('action -> NAME ASSIGN STR','action',3,'p_action','textRule.py',139),
  ('counted -> term','counted',1,'p_counted','textRule.py',143),
  ('counted -> term QM','counted',2,'p_counted','textRule.py',144),
  ('counted -> term STAR','counted',2,'p_counted','textRule.py',145),
  ('counted -> term PLUS','counted',2,'p_counted','textRule.py',146),
  ('term -> matchExpr','term',1,'p_term','textRule.py',159),
  ('term -> orderedExprs','term',1,'p_term','textRule.py',160),
  ('term -> unorderedExprs','term',1,'p_term','textRule.py',161),
  ('term -> mirroredExprs','term',1,'p_term','textRule.py',162),
  ('term -> alteredExprs','term',1,'p_term','textRule.py',163),
  ('term -> callExpr','term',1,'p_term','textRule.py',164),
  ('orderedExprs -> LB exprs RB','orderedExprs',3,'p_orderedExprs','textRule.py',168),
  ('unorderedExprs -> TILDE LB exprs RB','unorderedExprs',4,'p_unorderedExprs','textRule.py',172),
  ('mirroredExprs -> POW LB exprs RB','mirroredExprs',4,'p_mirroredExprs','textRule.py',176),
  ('alteredExprs -> LSB exprs RSB','alteredExprs',3,'p_alteredExprs','textRule.py',180),
  ('callExpr -> AT NAME','callExpr',2,'p_callExpr','textRule.py',184),
  ('exprs -> expr','exprs',1,'p_exprs','textRule.py',188),
  ('exprs -> exprs expr','exprs',2,'p_exprs','textRule.py',189),
  ('span -> SPANTYPE','span',1,'p_span','textRule.py',196),
  ('span -> COLON spanAttr','span',2,'p_span','textRule.py',197),
  ('span -> SPANTYPE COLON spanAttr','span',3,'p_span','textRule.py',198),
  ('spanAttr -> NAME','spanAttr',1,'p_spanAttr','textRule.py',209),
  ('spanAttr -> NAME ASSIGN STR','spanAttr',3,'p_spanAttr','textRule.py',210),
  ('exprDot -> DOT','exprDot',1,'p_exprDot','textRule.py',217),
  ('exprDot -> LAB RAB','exprDot',2,'p_exprDot','textRule.py',218),
  ('exprToken -> STR','exprToken',1,'p_exprToken','textRule.py',222),
  ('exprSpan -> LAB span RAB','exprSpan',3,'p_exprSpan','textRule.py',227),
  ('exprOperation -> NOT matchExpr','exprOperation',2,'p_exprOperation','textRule.py',231),
  ('exprOperation -> matchExpr AND matchExpr','exprOperation',3,'p_exprOperation','textRule.py',232),
  ('exprOperation -> matchExpr OR matchExpr','exprOperation',3,'p_exprOperation','textRule.py',233),
  ('matchExpr -> exprDot','matchExpr',1,'p_matchExpr','textRule.py',240),
  ('matchExpr -> exprToken','matchExpr',1,'p_matchExpr','textRule.py',241),
  ('matchExpr -> exprSpan','matchExpr',1,'p_matchExpr','textRule.py',242),
  ('matchExpr -> exprOperation','matchExpr',1,'p_matchExpr','textRule.py',243),
  ('matchExpr -> LBRACE matchExpr RBRACE','matchExpr',3,'p_matchExpr','textRule.py',244),
]
